package org.ua.wozzya.crawler;

import org.ua.wozzya.crawler.factory.TaskFactory;
import org.ua.wozzya.crawler.factory.response.Response;
import org.ua.wozzya.crawler.factory.task.payload.Payload;
import org.ua.wozzya.util.extractor.IterativeExtractor;

import java.nio.file.Path;

/**
 * @param <T> type of values that come from {@link IterativeExtractor}
 * @param <U> type of {@link java.util.concurrent.Future} generated by task from {@link TaskFactory}
 */
public interface Crawler<T, U extends Payload, F extends Response> {
    Crawler<T, U, F> crawlFrom(IterativeExtractor<T> iterativeExtractor);

    Crawler<T, U, F> withTaskFactory(TaskFactory<U, F> factory);

    Crawler<T, U, F> withThreadAmount(int threadAmount);

    void crawl();

}
